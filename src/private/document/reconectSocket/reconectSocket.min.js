var socket=io();let CONNECT=new Promise(e=>{socket.on("connect",()=>e(!1))});document.addEventListener("DOMContentLoaded",async()=>{function e(){setTimeout(async o=>{try{alarm.info("Intentando reconectar...");if(!(await query.get("/socket.io/socket.io.js")).ok)return e();window.location.reload()}catch{e()}},1e3)}let o=async()=>{if(!await CONNECT)return CONNECT=new Promise(e=>{let n=setTimeout(e=>o(),200);socket.emit("ready",o=>{alarm.success("Conexi\xf3n establecida"),clearTimeout(n),e(!0)})})};socket.on("disconnect",()=>{alarm.error("Desconectado..."),e()}),socket.on("disconnecting",()=>{alarm.error("Desconectando..."),e()}),socket.on("error",()=>{alarm.error("Error..."),e()}),socket.on("reconnect_attempt",()=>{alarm.error("Intento de reconexi\xf3n..."),e()}),socket.on("reconnect_error",()=>{alarm.error("Error de reconexi\xf3n... "),e()}),socket.on("reconnect_failed",()=>{alarm.error("Error al volver a conectar..."),e()}),await CONNECT,o()});